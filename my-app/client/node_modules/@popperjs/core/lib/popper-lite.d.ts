import { popperGenerator, detectOverflow } from "@popperjs/core/lib/createPopper/lib/createPopper";
export * from "@popperjs/core/lib/typesjs/core/lib/types";
declare const defaultModifiers: (import("@popperjs/core/lib/modifiers/popperOffsetsers/popperOffsets").PopperOffsetsMo@popperjs/core/lib/modifiers/eventListeners/core/lib/modifiers/eventListeners")@popperjs/core/lib/modifiers/computeStyles import("@popperjs/core/lib/modifie@popperjs/core/lib/modifiers/applyStylesuteStylesModifier | import("@popperjs/core/lib/modifiers/applyStyles").ApplyStylesModifier)[];
declare const createPopper: <TModifier extends Partial<import("@popperjs/core/lib/typesjs/core/lib/types").Modifier<any, any>>>(reference: E@popperjs/core/lib/types| import("@popperjs/core/lib/types").VirtualElement, popper: HTMLE@popperjs/core/lib/types options?: Partial<import("@popperjs/core/@popperjs/core/lib/typeses").OptionsGeneric<TModifier>>) => import("@popperjs/core/lib/types").Instance;
export { createPopper, popperGenerator, defaultModifiers, detectOverflow };
